// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu custom renderers itemContentRenderer should be called for each item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemContentRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemContentRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemContentRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemContentRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-1053 MuiDrawer-modal-1064 RSFMenu-modal-1051" open={false} onClose={[Function]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-1053 MuiDrawer-modal-1064 RSFMenu-modal-1051" open={false} onClose={[Function]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-1065 MuiDrawer-root-1053 MuiDrawer-modal-1064 RSFMenu-modal-1051 MuiModal-hidden-1066">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-1067" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-1055 RSFMenu-drawer-1029 MuiDrawer-paperAnchorLeft-1056" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-1055 RSFMenu-drawer-1029 MuiDrawer-paperAnchorLeft-1056" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-1069 MuiPaper-elevation16-1087 MuiDrawer-paper-1055 RSFMenu-drawer-1029 MuiDrawer-paperAnchorLeft-1056" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} itemContentRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} itemContentRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-1096 MuiList-padding-1097 RSFMenu-list-1030">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemContentRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemContentRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Branch expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <div amp-bind="class=>rsfMenu.sublists[\\'1.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-1100 RSFMenu-listItem-1043 RSFMenu-expander-1047 MuiListItem-default-1103 MuiListItem-gutters-1108 MuiListItem-divider-1107 MuiListItem-button-1109 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-1102">
                                                                        <ButtonBase className="MuiListItem-root-1100 RSFMenu-listItem-1043 RSFMenu-expander-1047 MuiListItem-default-1103 MuiListItem-gutters-1108 MuiListItem-divider-1107 MuiListItem-button-1109 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-1102" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                          <div className="MuiButtonBase-root-1112 MuiListItem-root-1100 RSFMenu-listItem-1043 RSFMenu-expander-1047 MuiListItem-default-1103 MuiListItem-gutters-1108 MuiListItem-divider-1107 MuiListItem-button-1109 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                            <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                              <ItemContent expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                <div>
                                                                                  Group 1
                                                                                </div>
                                                                              </ItemContent>
                                                                            </inject-ItemContent-with-app>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1120" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-1120" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </div>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </div>
                                                              <WithStyles(Collapse) in={false} timeout="auto">
                                                                <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                  <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                    <div className="MuiCollapse-container-1115" style={{...}}>
                                                                      <div className="MuiCollapse-wrapper-1117">
                                                                        <div className="MuiCollapse-wrapperInner-1118">
                                                                          <WithStyles(List) component="div" classes={{...}}>
                                                                            <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                              <div className="MuiList-root-1096 RSFMenu-list-1030 MuiList-padding-1097">
                                                                                <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                  <Item expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                    <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                      <Branch expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                        <div amp-bind="class=>rsfMenu.sublists[\\'2.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                                          <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                            <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-1100 RSFMenu-listItem-1043 RSFMenu-expander-1047 MuiListItem-default-1103 MuiListItem-gutters-1108 MuiListItem-divider-1107 MuiListItem-button-1109 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-1102">
                                                                                                  <ButtonBase className="MuiListItem-root-1100 RSFMenu-listItem-1043 RSFMenu-expander-1047 MuiListItem-default-1103 MuiListItem-gutters-1108 MuiListItem-divider-1107 MuiListItem-button-1109 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-1102" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                    <div className="MuiButtonBase-root-1112 MuiListItem-root-1100 RSFMenu-listItem-1043 RSFMenu-expander-1047 MuiListItem-default-1103 MuiListItem-gutters-1108 MuiListItem-divider-1107 MuiListItem-button-1109 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                          <div>
                                                                                                            Item 1
                                                                                                          </div>
                                                                                                        </ItemContent>
                                                                                                      </inject-ItemContent-with-app>
                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1120" childFactory={[Function: childFactory]}>
                                                                                                              <span className="MuiTouchRipple-root-1120" />
                                                                                                            </TransitionGroup>
                                                                                                          </TouchRipple>
                                                                                                        </WithStyles(TouchRipple)>
                                                                                                      </NoSsr>
                                                                                                    </div>
                                                                                                  </ButtonBase>
                                                                                                </WithStyles(ButtonBase)>
                                                                                              </MergeListContext>
                                                                                            </ListItem>
                                                                                          </WithStyles(ListItem)>
                                                                                        </div>
                                                                                        <WithStyles(Collapse) in={false} timeout="auto">
                                                                                          <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                              <div className="MuiCollapse-container-1115" style={{...}}>
                                                                                                <div className="MuiCollapse-wrapper-1117">
                                                                                                  <div className="MuiCollapse-wrapperInner-1118">
                                                                                                    <WithStyles(List) component="div" classes={{...}}>
                                                                                                      <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                        <div className="MuiList-root-1096 RSFMenu-list-1030 MuiList-padding-1097">
                                                                                                          <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                            <Item expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                              <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                <Leaf expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                  <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-1044" server={false} state={{...}} onClick={[Function]}>
                                                                                                                    <inject-Link to="/item1/child1" className="RSFMenu-link-1044" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                      <Link to="/item1/child1" className="RSFMenu-link-1044" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                        <a data-moov-link="on" className="RSFLink-root-1119 RSFMenu-link-1044" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                          <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                            <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-1100 RSFMenu-listItem-1043 RSFMenu-leaf-1048 MuiListItem-default-1103 MuiListItem-gutters-1108 MuiListItem-divider-1107 MuiListItem-button-1109" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-1102">
                                                                                                                                  <ButtonBase className="MuiListItem-root-1100 RSFMenu-listItem-1043 RSFMenu-leaf-1048 MuiListItem-default-1103 MuiListItem-gutters-1108 MuiListItem-divider-1107 MuiListItem-button-1109" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-1102" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                                                    <div className="MuiButtonBase-root-1112 MuiListItem-root-1100 RSFMenu-listItem-1043 RSFMenu-leaf-1048 MuiListItem-default-1103 MuiListItem-gutters-1108 MuiListItem-divider-1107 MuiListItem-button-1109" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                          <div>
                                                                                                                                            Child 1
                                                                                                                                          </div>
                                                                                                                                        </ItemContent>
                                                                                                                                      </inject-ItemContent-with-app>
                                                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1120" childFactory={[Function: childFactory]}>
                                                                                                                                              <span className="MuiTouchRipple-root-1120" />
                                                                                                                                            </TransitionGroup>
                                                                                                                                          </TouchRipple>
                                                                                                                                        </WithStyles(TouchRipple)>
                                                                                                                                      </NoSsr>
                                                                                                                                    </div>
                                                                                                                                  </ButtonBase>
                                                                                                                                </WithStyles(ButtonBase)>
                                                                                                                              </MergeListContext>
                                                                                                                            </ListItem>
                                                                                                                          </WithStyles(ListItem)>
                                                                                                                        </a>
                                                                                                                      </Link>
                                                                                                                    </inject-Link>
                                                                                                                  </WithStyles(inject-Link)>
                                                                                                                </Leaf>
                                                                                                              </inject-Leaf-with-app>
                                                                                                            </Item>
                                                                                                          </inject-Item-with-app>
                                                                                                        </div>
                                                                                                      </List>
                                                                                                    </WithStyles(List)>
                                                                                                  </div>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Transition>
                                                                                          </Collapse>
                                                                                        </WithStyles(Collapse)>
                                                                                      </Branch>
                                                                                    </inject-Branch-with-app>
                                                                                  </Item>
                                                                                </inject-Item-with-app>
                                                                              </div>
                                                                            </List>
                                                                          </WithStyles(List)>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </Transition>
                                                                </Collapse>
                                                              </WithStyles(Collapse)>
                                                            </Branch>
                                                          </inject-Branch-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemContentRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemContentRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Leaf expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-1044" server={false} state={{...}} onClick={[Function]}>
                                                                <inject-Link to="/leaf" className="RSFMenu-link-1044" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                  <Link to="/leaf" className="RSFMenu-link-1044" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                    <a data-moov-link="on" className="RSFLink-root-1119 RSFMenu-link-1044" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                                      <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                        <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-1100 RSFMenu-listItem-1043 RSFMenu-leaf-1048 MuiListItem-default-1103 MuiListItem-gutters-1108 MuiListItem-divider-1107 MuiListItem-button-1109" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-1102">
                                                                              <ButtonBase className="MuiListItem-root-1100 RSFMenu-listItem-1043 RSFMenu-leaf-1048 MuiListItem-default-1103 MuiListItem-gutters-1108 MuiListItem-divider-1107 MuiListItem-button-1109" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-1102" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                <div className="MuiButtonBase-root-1112 MuiListItem-root-1100 RSFMenu-listItem-1043 RSFMenu-leaf-1048 MuiListItem-default-1103 MuiListItem-gutters-1108 MuiListItem-divider-1107 MuiListItem-button-1109" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                    <ItemContent expandFirstItem={false} itemContentRenderer={[Function: mockConstructor]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                      <div>
                                                                                        Leaf
                                                                                      </div>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1120" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-1120" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </div>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </a>
                                                                  </Link>
                                                                </inject-Link>
                                                              </WithStyles(inject-Link)>
                                                            </Leaf>
                                                          </inject-Leaf-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <a href="/item1">
                          Item 1
                        </a>
                        <a href="/item1/child1">
                          Child 1
                        </a>
                        <a href="/leaf">
                          Leaf
                        </a>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu custom renderers itemRenderer should be called for each item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-868 MuiDrawer-modal-879 RSFMenu-modal-866" open={false} onClose={[Function]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-868 MuiDrawer-modal-879 RSFMenu-modal-866" open={false} onClose={[Function]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-880 MuiDrawer-root-868 MuiDrawer-modal-879 RSFMenu-modal-866 MuiModal-hidden-881">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-882" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-870 RSFMenu-drawer-844 MuiDrawer-paperAnchorLeft-871" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-870 RSFMenu-drawer-844 MuiDrawer-paperAnchorLeft-871" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-884 MuiPaper-elevation16-902 MuiDrawer-paper-870 RSFMenu-drawer-844 MuiDrawer-paperAnchorLeft-871" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-911 MuiList-padding-912 RSFMenu-list-845">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <div>
                                                            Group 1
                                                          </div>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <div>
                                                            Leaf
                                                          </div>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <a href="/item1">
                          Item 1
                        </a>
                        <a href="/item1/child1">
                          Child 1
                        </a>
                        <a href="/leaf">
                          Leaf
                        </a>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu custom renderers itemRenderer should render the default when null is returned 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-939 MuiDrawer-modal-950 RSFMenu-modal-937" open={false} onClose={[Function]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-939 MuiDrawer-modal-950 RSFMenu-modal-937" open={false} onClose={[Function]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-951 MuiDrawer-root-939 MuiDrawer-modal-950 RSFMenu-modal-937 MuiModal-hidden-952">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-953" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-941 RSFMenu-drawer-915 MuiDrawer-paperAnchorLeft-942" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-941 RSFMenu-drawer-915 MuiDrawer-paperAnchorLeft-942" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-955 MuiPaper-elevation16-973 MuiDrawer-paper-941 RSFMenu-drawer-915 MuiDrawer-paperAnchorLeft-942" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-982 MuiList-padding-983 RSFMenu-list-916">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <div amp-bind="class=>rsfMenu.sublists[\\'1.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-986 RSFMenu-listItem-929 RSFMenu-expander-933 MuiListItem-default-989 MuiListItem-gutters-994 MuiListItem-divider-993 MuiListItem-button-995 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-988">
                                                                        <ButtonBase className="MuiListItem-root-986 RSFMenu-listItem-929 RSFMenu-expander-933 MuiListItem-default-989 MuiListItem-gutters-994 MuiListItem-divider-993 MuiListItem-button-995 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-988" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                          <div className="MuiButtonBase-root-998 MuiListItem-root-986 RSFMenu-listItem-929 RSFMenu-expander-933 MuiListItem-default-989 MuiListItem-gutters-994 MuiListItem-divider-993 MuiListItem-button-995 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                            <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                              <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                <WithStyles(ListItemText) className="RSFMenu-listItem-929" primary="Group 1" disableTypography={true}>
                                                                                  <ListItemText className="RSFMenu-listItem-929" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                    <div className="MuiListItemText-root-1001 RSFMenu-listItem-929">
                                                                                      Group 1
                                                                                    </div>
                                                                                  </ListItemText>
                                                                                </WithStyles(ListItemText)>
                                                                                <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-932">
                                                                                  <ListItemIcon className="RSFMenu-listItemIcon-932" classes={{...}}>
                                                                                    <div className="MuiListItemIcon-root-1007 RSFMenu-listItemIcon-932">
                                                                                      <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                        <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-924">
                                                                                            <ExpandMoreIcon className="RSFMenu-icon-924">
                                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-924">
                                                                                                <SvgIcon className="RSFMenu-icon-924" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                  <svg className="MuiSvgIcon-root-1008 RSFMenu-icon-924" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                                  </svg>
                                                                                                </SvgIcon>
                                                                                              </WithStyles(SvgIcon)>
                                                                                            </ExpandMoreIcon>
                                                                                          </pure(ExpandMoreIcon)>
                                                                                        </ExpanderIcon>
                                                                                      </inject-ExpanderIcon-with-app>
                                                                                    </div>
                                                                                  </ListItemIcon>
                                                                                </WithStyles(ListItemIcon)>
                                                                              </ItemContent>
                                                                            </inject-ItemContent-with-app>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1022" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-1022" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </div>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </div>
                                                              <WithStyles(Collapse) in={false} timeout="auto">
                                                                <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                  <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                    <div className="MuiCollapse-container-1017" style={{...}}>
                                                                      <div className="MuiCollapse-wrapper-1019">
                                                                        <div className="MuiCollapse-wrapperInner-1020">
                                                                          <WithStyles(List) component="div" classes={{...}}>
                                                                            <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                              <div className="MuiList-root-982 RSFMenu-list-916 MuiList-padding-983">
                                                                                <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                  <Item expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                    <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                      <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                        <div amp-bind="class=>rsfMenu.sublists[\\'2.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                                          <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                            <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-986 RSFMenu-listItem-929 RSFMenu-expander-933 MuiListItem-default-989 MuiListItem-gutters-994 MuiListItem-divider-993 MuiListItem-button-995 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-988">
                                                                                                  <ButtonBase className="MuiListItem-root-986 RSFMenu-listItem-929 RSFMenu-expander-933 MuiListItem-default-989 MuiListItem-gutters-994 MuiListItem-divider-993 MuiListItem-button-995 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-988" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                    <div className="MuiButtonBase-root-998 MuiListItem-root-986 RSFMenu-listItem-929 RSFMenu-expander-933 MuiListItem-default-989 MuiListItem-gutters-994 MuiListItem-divider-993 MuiListItem-button-995 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                          <WithStyles(ListItemText) className="RSFMenu-listItem-929" primary="Item 1" disableTypography={true}>
                                                                                                            <ListItemText className="RSFMenu-listItem-929" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                              <div className="MuiListItemText-root-1001 RSFMenu-listItem-929">
                                                                                                                Item 1
                                                                                                              </div>
                                                                                                            </ListItemText>
                                                                                                          </WithStyles(ListItemText)>
                                                                                                          <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-932">
                                                                                                            <ListItemIcon className="RSFMenu-listItemIcon-932" classes={{...}}>
                                                                                                              <div className="MuiListItemIcon-root-1007 RSFMenu-listItemIcon-932">
                                                                                                                <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                    <pure(ExpandMoreIcon) className="RSFMenu-icon-924">
                                                                                                                      <ExpandMoreIcon className="RSFMenu-icon-924">
                                                                                                                        <WithStyles(SvgIcon) className="RSFMenu-icon-924">
                                                                                                                          <SvgIcon className="RSFMenu-icon-924" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                            <svg className="MuiSvgIcon-root-1008 RSFMenu-icon-924" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                              <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                              <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                            </svg>
                                                                                                                          </SvgIcon>
                                                                                                                        </WithStyles(SvgIcon)>
                                                                                                                      </ExpandMoreIcon>
                                                                                                                    </pure(ExpandMoreIcon)>
                                                                                                                  </ExpanderIcon>
                                                                                                                </inject-ExpanderIcon-with-app>
                                                                                                              </div>
                                                                                                            </ListItemIcon>
                                                                                                          </WithStyles(ListItemIcon)>
                                                                                                        </ItemContent>
                                                                                                      </inject-ItemContent-with-app>
                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1022" childFactory={[Function: childFactory]}>
                                                                                                              <span className="MuiTouchRipple-root-1022" />
                                                                                                            </TransitionGroup>
                                                                                                          </TouchRipple>
                                                                                                        </WithStyles(TouchRipple)>
                                                                                                      </NoSsr>
                                                                                                    </div>
                                                                                                  </ButtonBase>
                                                                                                </WithStyles(ButtonBase)>
                                                                                              </MergeListContext>
                                                                                            </ListItem>
                                                                                          </WithStyles(ListItem)>
                                                                                        </div>
                                                                                        <WithStyles(Collapse) in={false} timeout="auto">
                                                                                          <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                              <div className="MuiCollapse-container-1017" style={{...}}>
                                                                                                <div className="MuiCollapse-wrapper-1019">
                                                                                                  <div className="MuiCollapse-wrapperInner-1020">
                                                                                                    <WithStyles(List) component="div" classes={{...}}>
                                                                                                      <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                        <div className="MuiList-root-982 RSFMenu-list-916 MuiList-padding-983">
                                                                                                          <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                            <Item expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                              <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                <Leaf expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                  <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-930" server={false} state={{...}} onClick={[Function]}>
                                                                                                                    <inject-Link to="/item1/child1" className="RSFMenu-link-930" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                      <Link to="/item1/child1" className="RSFMenu-link-930" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                        <a data-moov-link="on" className="RSFLink-root-1021 RSFMenu-link-930" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                          <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                            <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-986 RSFMenu-listItem-929 RSFMenu-leaf-934 MuiListItem-default-989 MuiListItem-gutters-994 MuiListItem-divider-993 MuiListItem-button-995" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-988">
                                                                                                                                  <ButtonBase className="MuiListItem-root-986 RSFMenu-listItem-929 RSFMenu-leaf-934 MuiListItem-default-989 MuiListItem-gutters-994 MuiListItem-divider-993 MuiListItem-button-995" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-988" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                                                    <div className="MuiButtonBase-root-998 MuiListItem-root-986 RSFMenu-listItem-929 RSFMenu-leaf-934 MuiListItem-default-989 MuiListItem-gutters-994 MuiListItem-divider-993 MuiListItem-button-995" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                          <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                            <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                              <div className="MuiListItemText-root-1001">
                                                                                                                                                Child 1
                                                                                                                                              </div>
                                                                                                                                            </ListItemText>
                                                                                                                                          </WithStyles(ListItemText)>
                                                                                                                                        </ItemContent>
                                                                                                                                      </inject-ItemContent-with-app>
                                                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1022" childFactory={[Function: childFactory]}>
                                                                                                                                              <span className="MuiTouchRipple-root-1022" />
                                                                                                                                            </TransitionGroup>
                                                                                                                                          </TouchRipple>
                                                                                                                                        </WithStyles(TouchRipple)>
                                                                                                                                      </NoSsr>
                                                                                                                                    </div>
                                                                                                                                  </ButtonBase>
                                                                                                                                </WithStyles(ButtonBase)>
                                                                                                                              </MergeListContext>
                                                                                                                            </ListItem>
                                                                                                                          </WithStyles(ListItem)>
                                                                                                                        </a>
                                                                                                                      </Link>
                                                                                                                    </inject-Link>
                                                                                                                  </WithStyles(inject-Link)>
                                                                                                                </Leaf>
                                                                                                              </inject-Leaf-with-app>
                                                                                                            </Item>
                                                                                                          </inject-Item-with-app>
                                                                                                        </div>
                                                                                                      </List>
                                                                                                    </WithStyles(List)>
                                                                                                  </div>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Transition>
                                                                                          </Collapse>
                                                                                        </WithStyles(Collapse)>
                                                                                      </Branch>
                                                                                    </inject-Branch-with-app>
                                                                                  </Item>
                                                                                </inject-Item-with-app>
                                                                              </div>
                                                                            </List>
                                                                          </WithStyles(List)>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </Transition>
                                                                </Collapse>
                                                              </WithStyles(Collapse)>
                                                            </Branch>
                                                          </inject-Branch-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} itemRenderer={[Function: mockConstructor]} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Leaf expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-930" server={false} state={{...}} onClick={[Function]}>
                                                                <inject-Link to="/leaf" className="RSFMenu-link-930" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                  <Link to="/leaf" className="RSFMenu-link-930" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                    <a data-moov-link="on" className="RSFLink-root-1021 RSFMenu-link-930" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                                      <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                        <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-986 RSFMenu-listItem-929 RSFMenu-leaf-934 MuiListItem-default-989 MuiListItem-gutters-994 MuiListItem-divider-993 MuiListItem-button-995" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-988">
                                                                              <ButtonBase className="MuiListItem-root-986 RSFMenu-listItem-929 RSFMenu-leaf-934 MuiListItem-default-989 MuiListItem-gutters-994 MuiListItem-divider-993 MuiListItem-button-995" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-988" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                <div className="MuiButtonBase-root-998 MuiListItem-root-986 RSFMenu-listItem-929 RSFMenu-leaf-934 MuiListItem-default-989 MuiListItem-gutters-994 MuiListItem-divider-993 MuiListItem-button-995" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                    <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[Function: mockConstructor]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                      <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                                        <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-1001">
                                                                                            Leaf
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1022" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-1022" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </div>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </a>
                                                                  </Link>
                                                                </inject-Link>
                                                              </WithStyles(inject-Link)>
                                                            </Leaf>
                                                          </inject-Leaf-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <a href="/item1">
                          Item 1
                        </a>
                        <a href="/item1/child1">
                          Child 1
                        </a>
                        <a href="/leaf">
                          Leaf
                        </a>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should be able to render leaf as a top level item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-754 MuiDrawer-modal-765 RSFMenu-modal-752" open={false} onClose={[Function]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-754 MuiDrawer-modal-765 RSFMenu-modal-752" open={false} onClose={[Function]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-766 MuiDrawer-root-754 MuiDrawer-modal-765 RSFMenu-modal-752 MuiModal-hidden-767">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-768" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-756 RSFMenu-drawer-730 MuiDrawer-paperAnchorLeft-757" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-756 RSFMenu-drawer-730 MuiDrawer-paperAnchorLeft-757" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-770 MuiPaper-elevation16-788 MuiDrawer-paper-756 RSFMenu-drawer-730 MuiDrawer-paperAnchorLeft-757" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-797 MuiList-padding-798 RSFMenu-list-731">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <div amp-bind="class=>rsfMenu.sublists[\\'1.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-801 RSFMenu-listItem-744 RSFMenu-expander-748 MuiListItem-default-804 MuiListItem-gutters-809 MuiListItem-divider-808 MuiListItem-button-810 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-803">
                                                                        <ButtonBase className="MuiListItem-root-801 RSFMenu-listItem-744 RSFMenu-expander-748 MuiListItem-default-804 MuiListItem-gutters-809 MuiListItem-divider-808 MuiListItem-button-810 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-803" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                          <div className="MuiButtonBase-root-813 MuiListItem-root-801 RSFMenu-listItem-744 RSFMenu-expander-748 MuiListItem-default-804 MuiListItem-gutters-809 MuiListItem-divider-808 MuiListItem-button-810 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                            <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                              <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                <WithStyles(ListItemText) className="RSFMenu-listItem-744" primary="Group 1" disableTypography={true}>
                                                                                  <ListItemText className="RSFMenu-listItem-744" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                    <div className="MuiListItemText-root-816 RSFMenu-listItem-744">
                                                                                      Group 1
                                                                                    </div>
                                                                                  </ListItemText>
                                                                                </WithStyles(ListItemText)>
                                                                                <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-747">
                                                                                  <ListItemIcon className="RSFMenu-listItemIcon-747" classes={{...}}>
                                                                                    <div className="MuiListItemIcon-root-822 RSFMenu-listItemIcon-747">
                                                                                      <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                        <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-739">
                                                                                            <ExpandMoreIcon className="RSFMenu-icon-739">
                                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-739">
                                                                                                <SvgIcon className="RSFMenu-icon-739" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                  <svg className="MuiSvgIcon-root-823 RSFMenu-icon-739" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                                  </svg>
                                                                                                </SvgIcon>
                                                                                              </WithStyles(SvgIcon)>
                                                                                            </ExpandMoreIcon>
                                                                                          </pure(ExpandMoreIcon)>
                                                                                        </ExpanderIcon>
                                                                                      </inject-ExpanderIcon-with-app>
                                                                                    </div>
                                                                                  </ListItemIcon>
                                                                                </WithStyles(ListItemIcon)>
                                                                              </ItemContent>
                                                                            </inject-ItemContent-with-app>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-837" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-837" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </div>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </div>
                                                              <WithStyles(Collapse) in={false} timeout="auto">
                                                                <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                  <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                    <div className="MuiCollapse-container-832" style={{...}}>
                                                                      <div className="MuiCollapse-wrapper-834">
                                                                        <div className="MuiCollapse-wrapperInner-835">
                                                                          <WithStyles(List) component="div" classes={{...}}>
                                                                            <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                              <div className="MuiList-root-797 RSFMenu-list-731 MuiList-padding-798">
                                                                                <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                  <Item expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                    <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                      <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                        <div amp-bind="class=>rsfMenu.sublists[\\'2.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                                          <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                            <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-801 RSFMenu-listItem-744 RSFMenu-expander-748 MuiListItem-default-804 MuiListItem-gutters-809 MuiListItem-divider-808 MuiListItem-button-810 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-803">
                                                                                                  <ButtonBase className="MuiListItem-root-801 RSFMenu-listItem-744 RSFMenu-expander-748 MuiListItem-default-804 MuiListItem-gutters-809 MuiListItem-divider-808 MuiListItem-button-810 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-803" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                    <div className="MuiButtonBase-root-813 MuiListItem-root-801 RSFMenu-listItem-744 RSFMenu-expander-748 MuiListItem-default-804 MuiListItem-gutters-809 MuiListItem-divider-808 MuiListItem-button-810 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                          <WithStyles(ListItemText) className="RSFMenu-listItem-744" primary="Item 1" disableTypography={true}>
                                                                                                            <ListItemText className="RSFMenu-listItem-744" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                              <div className="MuiListItemText-root-816 RSFMenu-listItem-744">
                                                                                                                Item 1
                                                                                                              </div>
                                                                                                            </ListItemText>
                                                                                                          </WithStyles(ListItemText)>
                                                                                                          <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-747">
                                                                                                            <ListItemIcon className="RSFMenu-listItemIcon-747" classes={{...}}>
                                                                                                              <div className="MuiListItemIcon-root-822 RSFMenu-listItemIcon-747">
                                                                                                                <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                    <pure(ExpandMoreIcon) className="RSFMenu-icon-739">
                                                                                                                      <ExpandMoreIcon className="RSFMenu-icon-739">
                                                                                                                        <WithStyles(SvgIcon) className="RSFMenu-icon-739">
                                                                                                                          <SvgIcon className="RSFMenu-icon-739" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                            <svg className="MuiSvgIcon-root-823 RSFMenu-icon-739" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                              <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                              <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                            </svg>
                                                                                                                          </SvgIcon>
                                                                                                                        </WithStyles(SvgIcon)>
                                                                                                                      </ExpandMoreIcon>
                                                                                                                    </pure(ExpandMoreIcon)>
                                                                                                                  </ExpanderIcon>
                                                                                                                </inject-ExpanderIcon-with-app>
                                                                                                              </div>
                                                                                                            </ListItemIcon>
                                                                                                          </WithStyles(ListItemIcon)>
                                                                                                        </ItemContent>
                                                                                                      </inject-ItemContent-with-app>
                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-837" childFactory={[Function: childFactory]}>
                                                                                                              <span className="MuiTouchRipple-root-837" />
                                                                                                            </TransitionGroup>
                                                                                                          </TouchRipple>
                                                                                                        </WithStyles(TouchRipple)>
                                                                                                      </NoSsr>
                                                                                                    </div>
                                                                                                  </ButtonBase>
                                                                                                </WithStyles(ButtonBase)>
                                                                                              </MergeListContext>
                                                                                            </ListItem>
                                                                                          </WithStyles(ListItem)>
                                                                                        </div>
                                                                                        <WithStyles(Collapse) in={false} timeout="auto">
                                                                                          <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                              <div className="MuiCollapse-container-832" style={{...}}>
                                                                                                <div className="MuiCollapse-wrapper-834">
                                                                                                  <div className="MuiCollapse-wrapperInner-835">
                                                                                                    <WithStyles(List) component="div" classes={{...}}>
                                                                                                      <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                        <div className="MuiList-root-797 RSFMenu-list-731 MuiList-padding-798">
                                                                                                          <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                            <Item expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                              <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                <Leaf expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                  <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-745" server={false} state={{...}} onClick={[Function]}>
                                                                                                                    <inject-Link to="/item1/child1" className="RSFMenu-link-745" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                      <Link to="/item1/child1" className="RSFMenu-link-745" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                        <a data-moov-link="on" className="RSFLink-root-836 RSFMenu-link-745" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                          <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                            <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-801 RSFMenu-listItem-744 RSFMenu-leaf-749 MuiListItem-default-804 MuiListItem-gutters-809 MuiListItem-divider-808 MuiListItem-button-810" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-803">
                                                                                                                                  <ButtonBase className="MuiListItem-root-801 RSFMenu-listItem-744 RSFMenu-leaf-749 MuiListItem-default-804 MuiListItem-gutters-809 MuiListItem-divider-808 MuiListItem-button-810" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-803" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                                                    <div className="MuiButtonBase-root-813 MuiListItem-root-801 RSFMenu-listItem-744 RSFMenu-leaf-749 MuiListItem-default-804 MuiListItem-gutters-809 MuiListItem-divider-808 MuiListItem-button-810" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                          <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                            <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                              <div className="MuiListItemText-root-816">
                                                                                                                                                Child 1
                                                                                                                                              </div>
                                                                                                                                            </ListItemText>
                                                                                                                                          </WithStyles(ListItemText)>
                                                                                                                                        </ItemContent>
                                                                                                                                      </inject-ItemContent-with-app>
                                                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-837" childFactory={[Function: childFactory]}>
                                                                                                                                              <span className="MuiTouchRipple-root-837" />
                                                                                                                                            </TransitionGroup>
                                                                                                                                          </TouchRipple>
                                                                                                                                        </WithStyles(TouchRipple)>
                                                                                                                                      </NoSsr>
                                                                                                                                    </div>
                                                                                                                                  </ButtonBase>
                                                                                                                                </WithStyles(ButtonBase)>
                                                                                                                              </MergeListContext>
                                                                                                                            </ListItem>
                                                                                                                          </WithStyles(ListItem)>
                                                                                                                        </a>
                                                                                                                      </Link>
                                                                                                                    </inject-Link>
                                                                                                                  </WithStyles(inject-Link)>
                                                                                                                </Leaf>
                                                                                                              </inject-Leaf-with-app>
                                                                                                            </Item>
                                                                                                          </inject-Item-with-app>
                                                                                                        </div>
                                                                                                      </List>
                                                                                                    </WithStyles(List)>
                                                                                                  </div>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Transition>
                                                                                          </Collapse>
                                                                                        </WithStyles(Collapse)>
                                                                                      </Branch>
                                                                                    </inject-Branch-with-app>
                                                                                  </Item>
                                                                                </inject-Item-with-app>
                                                                              </div>
                                                                            </List>
                                                                          </WithStyles(List)>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </Transition>
                                                                </Collapse>
                                                              </WithStyles(Collapse)>
                                                            </Branch>
                                                          </inject-Branch-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Leaf expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-745" server={false} state={{...}} onClick={[Function]}>
                                                                <inject-Link to="/leaf" className="RSFMenu-link-745" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                  <Link to="/leaf" className="RSFMenu-link-745" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                    <a data-moov-link="on" className="RSFLink-root-836 RSFMenu-link-745" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                                      <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                        <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                          <MergeListContext dense={false} alignItems="center">
                                                                            <WithStyles(ButtonBase) className="MuiListItem-root-801 RSFMenu-listItem-744 RSFMenu-leaf-749 MuiListItem-default-804 MuiListItem-gutters-809 MuiListItem-divider-808 MuiListItem-button-810" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-803">
                                                                              <ButtonBase className="MuiListItem-root-801 RSFMenu-listItem-744 RSFMenu-leaf-749 MuiListItem-default-804 MuiListItem-gutters-809 MuiListItem-divider-808 MuiListItem-button-810" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-803" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                <div className="MuiButtonBase-root-813 MuiListItem-root-801 RSFMenu-listItem-744 RSFMenu-leaf-749 MuiListItem-default-804 MuiListItem-gutters-809 MuiListItem-divider-808 MuiListItem-button-810" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                  <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                    <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                      <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                                        <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                          <div className="MuiListItemText-root-816">
                                                                                            Leaf
                                                                                          </div>
                                                                                        </ListItemText>
                                                                                      </WithStyles(ListItemText)>
                                                                                    </ItemContent>
                                                                                  </inject-ItemContent-with-app>
                                                                                  <NoSsr defer={false} fallback={{...}}>
                                                                                    <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                      <TouchRipple center={false} classes={{...}}>
                                                                                        <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-837" childFactory={[Function: childFactory]}>
                                                                                          <span className="MuiTouchRipple-root-837" />
                                                                                        </TransitionGroup>
                                                                                      </TouchRipple>
                                                                                    </WithStyles(TouchRipple)>
                                                                                  </NoSsr>
                                                                                </div>
                                                                              </ButtonBase>
                                                                            </WithStyles(ButtonBase)>
                                                                          </MergeListContext>
                                                                        </ListItem>
                                                                      </WithStyles(ListItem)>
                                                                    </a>
                                                                  </Link>
                                                                </inject-Link>
                                                              </WithStyles(inject-Link)>
                                                            </Leaf>
                                                          </inject-Leaf-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <a href="/item1">
                          Item 1
                        </a>
                        <a href="/item1/child1">
                          Child 1
                        </a>
                        <a href="/leaf">
                          Leaf
                        </a>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app))>
        <WithStyles(inject-Menu-with-app) theme={{...}}>
          <inject-Menu-with-app theme={{...}} classes={{...}}>
            <Menu theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-139 MuiDrawer-modal-150 RSFMenu-modal-137" open={false} onClose={[Function]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-139 MuiDrawer-modal-150 RSFMenu-modal-137" open={false} onClose={[Function]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-151 MuiDrawer-root-139 MuiDrawer-modal-150 RSFMenu-modal-137 MuiModal-hidden-152">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-153" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-141 RSFMenu-drawer-115 MuiDrawer-paperAnchorLeft-142" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-141 RSFMenu-drawer-115 MuiDrawer-paperAnchorLeft-142" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-155 MuiPaper-elevation16-173 MuiDrawer-paper-141 RSFMenu-drawer-115 MuiDrawer-paperAnchorLeft-142" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-bodyWrap-126" style={{...}}>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-182 RSFMenu-list-116 MuiList-padding-183" style={{...}}>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>rsfMenu.sublists[\\'0.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-186 RSFMenu-listItem-129 MuiListItem-default-189 MuiListItem-gutters-194 MuiListItem-divider-193 MuiListItem-button-195 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-188">
                                                                          <ButtonBase className="MuiListItem-root-186 RSFMenu-listItem-129 MuiListItem-default-189 MuiListItem-gutters-194 MuiListItem-divider-193 MuiListItem-button-195 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-188" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-198 MuiListItem-root-186 RSFMenu-listItem-129 MuiListItem-default-189 MuiListItem-gutters-194 MuiListItem-divider-193 MuiListItem-button-195 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-129" primary="Group 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-129" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-201 RSFMenu-listItem-129">
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-132">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-132" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-207 RSFMenu-listItemIcon-132">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-124">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-124">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-124">
                                                                                                  <SvgIcon className="RSFMenu-icon-124" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-208 RSFMenu-icon-124" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-217" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-217" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <a href="/item1">
                          Item 1
                        </a>
                        <a href="/item1/child1">
                          Child 1
                        </a>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 2`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-248 MuiDrawer-modal-259 RSFMenu-modal-246" open={false} onClose={[Function]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-248 MuiDrawer-modal-259 RSFMenu-modal-246" open={false} onClose={[Function]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-260 MuiDrawer-root-248 MuiDrawer-modal-259 RSFMenu-modal-246 MuiModal-hidden-261">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-262" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-250 RSFMenu-drawer-224 MuiDrawer-paperAnchorLeft-251" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-250 RSFMenu-drawer-224 MuiDrawer-paperAnchorLeft-251" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-264 MuiPaper-elevation16-282 MuiDrawer-paper-250 RSFMenu-drawer-224 MuiDrawer-paperAnchorLeft-251" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-bodyWrap-235" style={{...}}>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-291 RSFMenu-list-225 MuiList-padding-292" style={{...}}>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>rsfMenu.sublists[\\'0.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-295 RSFMenu-listItem-238 MuiListItem-default-298 MuiListItem-gutters-303 MuiListItem-divider-302 MuiListItem-button-304 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-297">
                                                                          <ButtonBase className="MuiListItem-root-295 RSFMenu-listItem-238 MuiListItem-default-298 MuiListItem-gutters-303 MuiListItem-divider-302 MuiListItem-button-304 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-297" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-307 MuiListItem-root-295 RSFMenu-listItem-238 MuiListItem-default-298 MuiListItem-gutters-303 MuiListItem-divider-302 MuiListItem-button-304 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-238" primary="Group 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-238" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-310 RSFMenu-listItem-238">
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-241">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-241" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-316 RSFMenu-listItemIcon-241">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-233">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-233">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-233">
                                                                                                  <SvgIcon className="RSFMenu-icon-233" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-317 RSFMenu-icon-233" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-326" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-326" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <a href="/item1">
                          Item 1
                        </a>
                        <a href="/item1/child1">
                          Child 1
                        </a>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in simple mode 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-25 MuiDrawer-modal-36 RSFMenu-modal-23" open={false} onClose={[Function]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-25 MuiDrawer-modal-36 RSFMenu-modal-23" open={false} onClose={[Function]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-37 MuiDrawer-root-25 MuiDrawer-modal-36 RSFMenu-modal-23 MuiModal-hidden-38">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-39" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-27 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-28" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-27 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-28" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-41 MuiPaper-elevation16-59 MuiDrawer-paper-27 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-28" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <WithStyles(List) classes={{...}}>
                                                  <List classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-68 MuiList-padding-69 RSFMenu-list-2">
                                                      <inject-Item-with-app drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                        <Item drawerWidth={330} simple={true} theme={{...}} expandFirstItem={false} trackSelected={false} app={{...}} depth={1} item={{...}}>
                                                          <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true}>
                                                            <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={true} app={{...}}>
                                                              <div amp-bind="class=>rsfMenu.sublists[\\'1.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                  <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-74">
                                                                        <ButtonBase className="MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-74" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                          <div className="MuiButtonBase-root-84 MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                            <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined">
                                                                              <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                <WithStyles(ListItemText) className="RSFMenu-listItem-15" primary="Group 1" disableTypography={true}>
                                                                                  <ListItemText className="RSFMenu-listItem-15" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                    <div className="MuiListItemText-root-87 RSFMenu-listItem-15">
                                                                                      Group 1
                                                                                    </div>
                                                                                  </ListItemText>
                                                                                </WithStyles(ListItemText)>
                                                                                <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-18">
                                                                                  <ListItemIcon className="RSFMenu-listItemIcon-18" classes={{...}}>
                                                                                    <div className="MuiListItemIcon-root-93 RSFMenu-listItemIcon-18">
                                                                                      <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                        <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="1.undefined" app={{...}}>
                                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-10">
                                                                                            <ExpandMoreIcon className="RSFMenu-icon-10">
                                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-10">
                                                                                                <SvgIcon className="RSFMenu-icon-10" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                  <svg className="MuiSvgIcon-root-94 RSFMenu-icon-10" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                                  </svg>
                                                                                                </SvgIcon>
                                                                                              </WithStyles(SvgIcon)>
                                                                                            </ExpandMoreIcon>
                                                                                          </pure(ExpandMoreIcon)>
                                                                                        </ExpanderIcon>
                                                                                      </inject-ExpanderIcon-with-app>
                                                                                    </div>
                                                                                  </ListItemIcon>
                                                                                </WithStyles(ListItemIcon)>
                                                                              </ItemContent>
                                                                            </inject-ItemContent-with-app>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-108" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-108" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </div>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </div>
                                                              <WithStyles(Collapse) in={false} timeout="auto">
                                                                <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                  <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                    <div className="MuiCollapse-container-103" style={{...}}>
                                                                      <div className="MuiCollapse-wrapper-105">
                                                                        <div className="MuiCollapse-wrapperInner-106">
                                                                          <WithStyles(List) component="div" classes={{...}}>
                                                                            <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                              <div className="MuiList-root-68 RSFMenu-list-2 MuiList-padding-69">
                                                                                <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                  <Item expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                    <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true}>
                                                                                      <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={2} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                        <div amp-bind="class=>rsfMenu.sublists[\\'2.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                                          <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                                            <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-74">
                                                                                                  <ButtonBase className="MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-74" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                    <div className="MuiButtonBase-root-84 MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-expander-19 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined">
                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                          <WithStyles(ListItemText) className="RSFMenu-listItem-15" primary="Item 1" disableTypography={true}>
                                                                                                            <ListItemText className="RSFMenu-listItem-15" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                              <div className="MuiListItemText-root-87 RSFMenu-listItem-15">
                                                                                                                Item 1
                                                                                                              </div>
                                                                                                            </ListItemText>
                                                                                                          </WithStyles(ListItemText)>
                                                                                                          <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-18">
                                                                                                            <ListItemIcon className="RSFMenu-listItemIcon-18" classes={{...}}>
                                                                                                              <div className="MuiListItemIcon-root-93 RSFMenu-listItemIcon-18">
                                                                                                                <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                  <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={true} sublist="2.undefined" app={{...}}>
                                                                                                                    <pure(ExpandMoreIcon) className="RSFMenu-icon-10">
                                                                                                                      <ExpandMoreIcon className="RSFMenu-icon-10">
                                                                                                                        <WithStyles(SvgIcon) className="RSFMenu-icon-10">
                                                                                                                          <SvgIcon className="RSFMenu-icon-10" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                                            <svg className="MuiSvgIcon-root-94 RSFMenu-icon-10" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                                              <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                                              <path fill="none" d="M0 0h24v24H0z" />
                                                                                                                            </svg>
                                                                                                                          </SvgIcon>
                                                                                                                        </WithStyles(SvgIcon)>
                                                                                                                      </ExpandMoreIcon>
                                                                                                                    </pure(ExpandMoreIcon)>
                                                                                                                  </ExpanderIcon>
                                                                                                                </inject-ExpanderIcon-with-app>
                                                                                                              </div>
                                                                                                            </ListItemIcon>
                                                                                                          </WithStyles(ListItemIcon)>
                                                                                                        </ItemContent>
                                                                                                      </inject-ItemContent-with-app>
                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-108" childFactory={[Function: childFactory]}>
                                                                                                              <span className="MuiTouchRipple-root-108" />
                                                                                                            </TransitionGroup>
                                                                                                          </TouchRipple>
                                                                                                        </WithStyles(TouchRipple)>
                                                                                                      </NoSsr>
                                                                                                    </div>
                                                                                                  </ButtonBase>
                                                                                                </WithStyles(ButtonBase)>
                                                                                              </MergeListContext>
                                                                                            </ListItem>
                                                                                          </WithStyles(ListItem)>
                                                                                        </div>
                                                                                        <WithStyles(Collapse) in={false} timeout="auto">
                                                                                          <Collapse in={false} timeout="auto" theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                                              <div className="MuiCollapse-container-103" style={{...}}>
                                                                                                <div className="MuiCollapse-wrapper-105">
                                                                                                  <div className="MuiCollapse-wrapperInner-106">
                                                                                                    <WithStyles(List) component="div" classes={{...}}>
                                                                                                      <List component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                                        <div className="MuiList-root-68 RSFMenu-list-2 MuiList-padding-69">
                                                                                                          <inject-Item-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                            <Item expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                              <inject-Leaf-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true}>
                                                                                                                <Leaf expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} app={{...}}>
                                                                                                                  <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-16" server={false} state={{...}} onClick={[Function]}>
                                                                                                                    <inject-Link to="/item1/child1" className="RSFMenu-link-16" server={false} state={{...}} onClick={[Function]} classes={{...}}>
                                                                                                                      <Link to="/item1/child1" className="RSFMenu-link-16" server={false} state={{...}} onClick={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                                        <a data-moov-link="on" className="RSFLink-root-107 RSFMenu-link-16" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                                          <WithStyles(ListItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                                            <ListItem button={true} divider={true} selected={false} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false}>
                                                                                                                              <MergeListContext dense={false} alignItems="center">
                                                                                                                                <WithStyles(ButtonBase) className="MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-74">
                                                                                                                                  <ButtonBase className="MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81" disabled={false} component="div" focusVisibleClassName="MuiListItem-focusVisible-74" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                                                                                    <div className="MuiButtonBase-root-84 MuiListItem-root-72 RSFMenu-listItem-15 RSFMenu-leaf-20 MuiListItem-default-75 MuiListItem-gutters-80 MuiListItem-divider-79 MuiListItem-button-81" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button">
                                                                                                                                      <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true}>
                                                                                                                                        <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} index={[undefined]} depth={3} useExpanders={[undefined]} simple={true} item={{...}} showExpander={false} leaf={true} app={{...}}>
                                                                                                                                          <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                                            <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                                              <div className="MuiListItemText-root-87">
                                                                                                                                                Child 1
                                                                                                                                              </div>
                                                                                                                                            </ListItemText>
                                                                                                                                          </WithStyles(ListItemText)>
                                                                                                                                        </ItemContent>
                                                                                                                                      </inject-ItemContent-with-app>
                                                                                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                                          <TouchRipple center={false} classes={{...}}>
                                                                                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-108" childFactory={[Function: childFactory]}>
                                                                                                                                              <span className="MuiTouchRipple-root-108" />
                                                                                                                                            </TransitionGroup>
                                                                                                                                          </TouchRipple>
                                                                                                                                        </WithStyles(TouchRipple)>
                                                                                                                                      </NoSsr>
                                                                                                                                    </div>
                                                                                                                                  </ButtonBase>
                                                                                                                                </WithStyles(ButtonBase)>
                                                                                                                              </MergeListContext>
                                                                                                                            </ListItem>
                                                                                                                          </WithStyles(ListItem)>
                                                                                                                        </a>
                                                                                                                      </Link>
                                                                                                                    </inject-Link>
                                                                                                                  </WithStyles(inject-Link)>
                                                                                                                </Leaf>
                                                                                                              </inject-Leaf-with-app>
                                                                                                            </Item>
                                                                                                          </inject-Item-with-app>
                                                                                                        </div>
                                                                                                      </List>
                                                                                                    </WithStyles(List)>
                                                                                                  </div>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Transition>
                                                                                          </Collapse>
                                                                                        </WithStyles(Collapse)>
                                                                                      </Branch>
                                                                                    </inject-Branch-with-app>
                                                                                  </Item>
                                                                                </inject-Item-with-app>
                                                                              </div>
                                                                            </List>
                                                                          </WithStyles(List)>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </Transition>
                                                                </Collapse>
                                                              </WithStyles(Collapse)>
                                                            </Branch>
                                                          </inject-Branch-with-app>
                                                        </Item>
                                                      </inject-Item-with-app>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <a href="/item1">
                          Item 1
                        </a>
                        <a href="/item1/child1">
                          Child 1
                        </a>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render without expand first not root item by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-610 MuiDrawer-modal-621 RSFMenu-modal-608" open={false} onClose={[Function]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-610 MuiDrawer-modal-621 RSFMenu-modal-608" open={false} onClose={[Function]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-622 MuiDrawer-root-610 MuiDrawer-modal-621 RSFMenu-modal-608 MuiModal-hidden-623">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-624" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-612 RSFMenu-drawer-586 MuiDrawer-paperAnchorLeft-613" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-612 RSFMenu-drawer-586 MuiDrawer-paperAnchorLeft-613" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-626 MuiPaper-elevation16-644 MuiDrawer-paper-612 RSFMenu-drawer-586 MuiDrawer-paperAnchorLeft-613" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-bodyWrap-597" style={{...}}>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-653 RSFMenu-list-587 MuiList-padding-654" style={{...}}>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>rsfMenu.sublists[\\'0.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-657 RSFMenu-listItem-600 MuiListItem-default-660 MuiListItem-gutters-665 MuiListItem-divider-664 MuiListItem-button-666 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-659">
                                                                          <ButtonBase className="MuiListItem-root-657 RSFMenu-listItem-600 MuiListItem-default-660 MuiListItem-gutters-665 MuiListItem-divider-664 MuiListItem-button-666 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-659" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-669 MuiListItem-root-657 RSFMenu-listItem-600 MuiListItem-default-660 MuiListItem-gutters-665 MuiListItem-divider-664 MuiListItem-button-666 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-600" primary="Group 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-600" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-672 RSFMenu-listItem-600">
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-603">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-603" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-678 RSFMenu-listItemIcon-603">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-595">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-595">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-595">
                                                                                                  <SvgIcon className="RSFMenu-icon-595" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-679 RSFMenu-icon-595" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-688" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-688" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-653 RSFMenu-list-587 MuiList-padding-654" style={{...}}>
                                                        <LeafHeader classes={{...}} goBack={[Function]} list={{...}} render={[undefined]}>
                                                          <WithStyles(ListItem) divider={true} button={true} onClick={[Function]} on="tap:AMP.setState({ rsfMenu: { list: \\'undefined\\' } })">
                                                            <ListItem divider={true} button={true} onClick={[Function]} on="tap:AMP.setState({ rsfMenu: { list: \\'undefined\\' } })" classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-657 MuiListItem-default-660 MuiListItem-gutters-665 MuiListItem-divider-664 MuiListItem-button-666" disabled={false} onClick={[Function]} on="tap:AMP.setState({ rsfMenu: { list: \\'undefined\\' } })" component="div" focusVisibleClassName="MuiListItem-focusVisible-659">
                                                                  <ButtonBase className="MuiListItem-root-657 MuiListItem-default-660 MuiListItem-gutters-665 MuiListItem-divider-664 MuiListItem-button-666" disabled={false} onClick={[Function]} on="tap:AMP.setState({ rsfMenu: { list: \\'undefined\\' } })" component="div" focusVisibleClassName="MuiListItem-focusVisible-659" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                    <div className="MuiButtonBase-root-669 MuiListItem-root-657 MuiListItem-default-660 MuiListItem-gutters-665 MuiListItem-divider-664 MuiListItem-button-666" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function]} on="tap:AMP.setState({ rsfMenu: { list: \\'undefined\\' } })">
                                                                      <WithStyles(ListItemIcon) classes={{...}}>
                                                                        <ListItemIcon classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-678 RSFMenu-header-594">
                                                                            <pure(ChevronLeftIcon) className="RSFMenu-icon-595">
                                                                              <ChevronLeftIcon className="RSFMenu-icon-595">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-595">
                                                                                  <SvgIcon className="RSFMenu-icon-595" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-679 RSFMenu-icon-595" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronLeftIcon>
                                                                            </pure(ChevronLeftIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <WithStyles(ListItemText) classes={{...}} primary={{...}}>
                                                                        <ListItemText primary={{...}} classes={{...}} disableTypography={false} inset={false}>
                                                                          <div className="MuiListItemText-root-672 RSFMenu-headerText-596">
                                                                            <WithStyles(Typography) variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-675" component="span">
                                                                              <Typography variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-675" component="span" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                                                <span className="MuiTypography-root-695 MuiTypography-subtitle1-713 MuiListItemText-primary-675">
                                                                                  <div className="RSFMenu-headerText-596">
                                                                                    Group 1
                                                                                     
                                                                                  </div>
                                                                                </span>
                                                                              </Typography>
                                                                            </WithStyles(Typography)>
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-688" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-688" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </div>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </LeafHeader>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={1} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={1} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} index={[undefined]} depth={1} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>rsfMenu.sublists[\\'1.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-657 RSFMenu-listItem-600 MuiListItem-default-660 MuiListItem-gutters-665 MuiListItem-divider-664 MuiListItem-button-666 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-659">
                                                                          <ButtonBase className="MuiListItem-root-657 RSFMenu-listItem-600 MuiListItem-default-660 MuiListItem-gutters-665 MuiListItem-divider-664 MuiListItem-button-666 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-659" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-669 MuiListItem-root-657 RSFMenu-listItem-600 MuiListItem-default-660 MuiListItem-gutters-665 MuiListItem-divider-664 MuiListItem-button-666 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined">
                                                                                <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-600" primary="Item 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-600" primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-672 RSFMenu-listItem-600">
                                                                                        Item 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-603">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-603" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-678 RSFMenu-listItemIcon-603">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[undefined]} CollapseIcon={[undefined]} theme={{...}} item={{...}} leaf={false} showExpander={[undefined]} sublist="1.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-595">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-595">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-595">
                                                                                                  <SvgIcon className="RSFMenu-icon-595" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-679 RSFMenu-icon-595" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-688" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-688" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                        <LeafFooter list={{...}} render={[undefined]} />
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <a href="/item1">
                          Item 1
                        </a>
                        <a href="/item1/child1">
                          Child 1
                        </a>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should use custom icons 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left" trackSelected={false}>
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-357 MuiDrawer-modal-368 RSFMenu-modal-355" open={false} onClose={[Function]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-357 MuiDrawer-modal-368 RSFMenu-modal-355" open={false} onClose={[Function]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-369 MuiDrawer-root-357 MuiDrawer-modal-368 RSFMenu-modal-355 MuiModal-hidden-370">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-371" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-359 RSFMenu-drawer-333 MuiDrawer-paperAnchorLeft-360" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-359 RSFMenu-drawer-333 MuiDrawer-paperAnchorLeft-360" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-373 MuiPaper-elevation16-391 MuiDrawer-paper-359 RSFMenu-drawer-333 MuiDrawer-paperAnchorLeft-360" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <inject-Body-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false}>
                                              <Body drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false} app={{...}}>
                                                <div className="RSFMenu-bodyWrap-344" style={{...}}>
                                                  <WithStyles(List) style={{...}} classes={{...}}>
                                                    <List style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                      <ul className="MuiList-root-400 RSFMenu-list-334 MuiList-padding-401" style={{...}}>
                                                        <inject-Item-with-app drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                          <Item drawerWidth={330} simple={false} theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} expandFirstItem={false} trackSelected={false} app={{...}} item={{...}} depth={0} classes={{...}}>
                                                            <inject-Branch-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false}>
                                                              <Branch expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} index={[undefined]} depth={0} useExpanders={[undefined]} simple={false} app={{...}}>
                                                                <div amp-bind="class=>rsfMenu.sublists[\\'0.undefined\\'] ? \\'expanded\\' : \\'\\'">
                                                                  <WithStyles(ListItem) className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}}>
                                                                    <ListItem className="menu-item" button={true} divider={true} onClick={[Function: bound ]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false} disableGutters={false} selected={false}>
                                                                      <MergeListContext dense={false} alignItems="center">
                                                                        <WithStyles(ButtonBase) className="MuiListItem-root-404 RSFMenu-listItem-347 MuiListItem-default-407 MuiListItem-gutters-412 MuiListItem-divider-411 MuiListItem-button-413 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-406">
                                                                          <ButtonBase className="MuiListItem-root-404 RSFMenu-listItem-347 MuiListItem-default-407 MuiListItem-gutters-412 MuiListItem-divider-411 MuiListItem-button-413 menu-item" disabled={false} onClick={[Function: bound ]} component="div" focusVisibleClassName="MuiListItem-focusVisible-406" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} tabIndex="0" type="button">
                                                                            <div className="MuiButtonBase-root-416 MuiListItem-root-404 RSFMenu-listItem-347 MuiListItem-default-407 MuiListItem-gutters-412 MuiListItem-divider-411 MuiListItem-button-413 menu-item" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" role="button" onClick={[Function: bound ]}>
                                                                              <inject-ItemContent-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined">
                                                                                <ItemContent expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                  <WithStyles(ListItemText) className="RSFMenu-listItem-347" primary="Group 1" disableTypography={true}>
                                                                                    <ListItemText className="RSFMenu-listItem-347" primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                      <div className="MuiListItemText-root-419 RSFMenu-listItem-347">
                                                                                        Group 1
                                                                                      </div>
                                                                                    </ListItemText>
                                                                                  </WithStyles(ListItemText)>
                                                                                  <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-350">
                                                                                    <ListItemIcon className="RSFMenu-listItemIcon-350" classes={{...}}>
                                                                                      <div className="MuiListItemIcon-root-425 RSFMenu-listItemIcon-350">
                                                                                        <inject-ExpanderIcon-with-app expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                          <ExpanderIcon expandFirstItem={false} itemContentRenderer={[undefined]} itemRenderer={[undefined]} trackSelected={false} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} theme={{...}} item={{...}} leaf={false} showExpander={false} sublist="0.undefined" app={{...}}>
                                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-342">
                                                                                              <ChevronRightIcon className="RSFMenu-icon-342">
                                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-342">
                                                                                                  <SvgIcon className="RSFMenu-icon-342" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                    <svg className="MuiSvgIcon-root-426 RSFMenu-icon-342" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                                    </svg>
                                                                                                  </SvgIcon>
                                                                                                </WithStyles(SvgIcon)>
                                                                                              </ChevronRightIcon>
                                                                                            </pure(ChevronRightIcon)>
                                                                                          </ExpanderIcon>
                                                                                        </inject-ExpanderIcon-with-app>
                                                                                      </div>
                                                                                    </ListItemIcon>
                                                                                  </WithStyles(ListItemIcon)>
                                                                                </ItemContent>
                                                                              </inject-ItemContent-with-app>
                                                                              <NoSsr defer={false} fallback={{...}}>
                                                                                <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                  <TouchRipple center={false} classes={{...}}>
                                                                                    <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-435" childFactory={[Function: childFactory]}>
                                                                                      <span className="MuiTouchRipple-root-435" />
                                                                                    </TransitionGroup>
                                                                                  </TouchRipple>
                                                                                </WithStyles(TouchRipple)>
                                                                              </NoSsr>
                                                                            </div>
                                                                          </ButtonBase>
                                                                        </WithStyles(ButtonBase)>
                                                                      </MergeListContext>
                                                                    </ListItem>
                                                                  </WithStyles(ListItem)>
                                                                </div>
                                                              </Branch>
                                                            </inject-Branch-with-app>
                                                          </Item>
                                                        </inject-Item-with-app>
                                                      </ul>
                                                    </List>
                                                  </WithStyles(List)>
                                                </div>
                                              </Body>
                                            </inject-Body-with-app>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
              <inject-SEOLinks-with-app>
                <SEOLinks app={{...}}>
                  <NoScript>
                    <div>
                      <nav style={{...}}>
                        <a href="/item1">
                          Item 1
                        </a>
                        <a href="/item1/child1">
                          Child 1
                        </a>
                      </nav>
                    </div>
                  </NoScript>
                </SEOLinks>
              </inject-SEOLinks-with-app>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
